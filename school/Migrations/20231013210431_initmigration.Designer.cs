// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using school.models;

#nullable disable

namespace school.Migrations
{
    [DbContext(typeof(schooldbcontext))]
    [Migration("20231013210431_initmigration")]
    partial class initmigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.11");

            modelBuilder.Entity("classroomstudent", b =>
                {
                    b.Property<Guid>("classroomsid")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("studentsid")
                        .HasColumnType("TEXT");

                    b.HasKey("classroomsid", "studentsid");

                    b.HasIndex("studentsid");

                    b.ToTable("classroomstudent");
                });

            modelBuilder.Entity("school.models.classroom", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("classname")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("durationofcoursebyhour")
                        .HasColumnType("INTEGER");

                    b.Property<int>("numberofstudents")
                        .HasColumnType("INTEGER");

                    b.Property<string>("teachername")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("id");

                    b.ToTable("classrooms");
                });

            modelBuilder.Entity("school.models.reportcard", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("Studentid")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("classroomid")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("issuedate")
                        .HasColumnType("TEXT");

                    b.Property<double>("score")
                        .HasColumnType("REAL");

                    b.HasKey("id");

                    b.HasIndex("Studentid");

                    b.HasIndex("classroomid");

                    b.ToTable("reportcards");
                });

            modelBuilder.Entity("school.models.student", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<int?>("age")
                        .IsRequired()
                        .HasColumnType("INTEGER");

                    b.Property<string>("fathername")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("fname")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int?>("grade")
                        .IsRequired()
                        .HasColumnType("INTEGER");

                    b.Property<string>("lname")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("nationalcode")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("TEXT");

                    b.HasKey("id");

                    b.ToTable("students");
                });

            modelBuilder.Entity("classroomstudent", b =>
                {
                    b.HasOne("school.models.classroom", null)
                        .WithMany()
                        .HasForeignKey("classroomsid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("school.models.student", null)
                        .WithMany()
                        .HasForeignKey("studentsid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("school.models.reportcard", b =>
                {
                    b.HasOne("school.models.student", "Student")
                        .WithMany()
                        .HasForeignKey("Studentid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("school.models.classroom", "classroom")
                        .WithMany()
                        .HasForeignKey("classroomid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Student");

                    b.Navigation("classroom");
                });
#pragma warning restore 612, 618
        }
    }
}
